{"ast":null,"code":"var _jsxFileName = \"/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Tabata.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\";\nimport DisplayTime from \"../generic/DisplayTime.js\";\nimport DisplayRounds from \"../generic/DisplayRounds.js\";\nimport { doConvert } from \"../../utils/helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tabata = () => {\n  _s();\n\n  const initialSeconds = 30;\n  const initialRounds = 3;\n  const [rounds, setRounds] = useState(initialRounds);\n  const [seconds, setSeconds] = useState(initialSeconds);\n  const [pause, setPause] = useState(true);\n  const [rest, setRest] = useState(false);\n  useEffect(() => {\n    const intervalId = setInterval(performCount, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  });\n\n  const performCount = () => {\n    if (!pause) {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n\n        if (seconds === 20) {\n          console.log(\"Tabata 20 seconds reached. Now 10 seconds rest...\");\n          setSeconds(10);\n          setRest(true);\n        }\n\n        if (seconds === 1 && rounds > 1) {\n          setSeconds(initialSeconds);\n          setRounds(rounds - 1);\n          setRest(false);\n        }\n      } else if (rounds === 1 && seconds === 0) {\n        console.log(\"Tabata timer ends!\");\n        setRounds(0);\n        setRest(false);\n        renderAction(pause, rest);\n      }\n    }\n  };\n\n  const handlePauseToggle = () => {\n    setPause(!pause);\n    console.log(\"Tabata \", pause ? 'unpaused' : 'paused');\n  };\n\n  const handleEnd = () => {\n    setPause(true);\n    setSeconds(0);\n    setRounds(0);\n    console.log(\"Tabata end called\");\n  };\n\n  const handleReset = () => {\n    setPause(true);\n    setSeconds(initialSeconds);\n    setRounds(initialRounds);\n    console.log(\"Tabata reset called\");\n  };\n\n  const renderAction = () => {\n    if (!pause) {\n      if (rest) return 'Action: Rest!';else return 'Action: Exercise!';\n    }\n\n    return;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(Panel, {\n        children: [/*#__PURE__*/_jsxDEV(DisplayRounds, {\n          rounds: rounds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DisplayTime, {\n          time: doConvert(seconds)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Panel, {\n        children: renderAction(pause, rest)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: pause ? 'btn-start' : 'btn-pause',\n      text: pause ? 'Start' : 'Pause',\n      onClick: handlePauseToggle,\n      disabled: seconds === 0 ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-end\",\n      text: \"End\",\n      onClick: handleEnd,\n      disabled: rounds === 0 || rounds === initialRounds ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-reset\",\n      text: \"Reset\",\n      onClick: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Tabata, \"zu5HFMg4SHQk8iYYzKzdCVhqHVY=\");\n\n_c = Tabata;\nexport default Tabata;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tabata\");","map":{"version":3,"names":["useEffect","useState","Panel","Button","DisplayTime","DisplayRounds","doConvert","Tabata","initialSeconds","initialRounds","rounds","setRounds","seconds","setSeconds","pause","setPause","rest","setRest","intervalId","setInterval","performCount","clearInterval","console","log","renderAction","handlePauseToggle","handleEnd","handleReset"],"sources":["/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Tabata.js"],"sourcesContent":["import { useEffect, useState} from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\";\nimport DisplayTime  from \"../generic/DisplayTime.js\";\nimport DisplayRounds from \"../generic/DisplayRounds.js\";\nimport { doConvert } from \"../../utils/helpers\";\n\n\nconst Tabata = () => {\n\n    const initialSeconds = 30;\n    const initialRounds = 3;\n\n    const [rounds, setRounds] = useState(initialRounds);\n    const [seconds, setSeconds] = useState(initialSeconds);\n    const [pause, setPause] = useState(true);\n    const [rest, setRest] = useState(false);\n\n        \n    useEffect(() => {\n        const intervalId = setInterval(performCount, 1000);\n          return () => {\n          clearInterval(intervalId);\n        };\n      });\n\n    const performCount = () => {\n        if (!pause) {\n          if (seconds > 0) {\n            setSeconds(seconds - 1);\n            if(seconds === 20){\n                console.log(\"Tabata 20 seconds reached. Now 10 seconds rest...\")\n                setSeconds(10);\n                setRest(true);\n            }\n            if (seconds === 1 && rounds > 1) {\n              setSeconds(initialSeconds);\n              setRounds(rounds - 1);\n              setRest(false);\n            }\n          } else if (rounds === 1 && seconds === 0) {\n            console.log(\"Tabata timer ends!\");\n            setRounds(0);\n            setRest(false);\n            renderAction(pause,rest);\n          }\n        }\n      };\n\n    const handlePauseToggle = () => {\n        setPause(!pause);\n        console.log(\"Tabata \",(pause)?'unpaused':'paused');\n    }\n    const handleEnd = () => {\n        setPause(true);\n        setSeconds(0);\n        setRounds(0);\n        console.log(\"Tabata end called\");\n    }\n    const handleReset = () => {\n        setPause(true);\n        setSeconds(initialSeconds);\n        setRounds(initialRounds);\n        console.log(\"Tabata reset called\");\n    }\n\n    const renderAction = () => {\n      if(!pause){\n        if(rest) return 'Action: Rest!';\n        else return 'Action: Exercise!';\n      }\n      return ;\n    }\n\n\n    return (\n        <>\n        <Panel className=\"output\">\n            <Panel>\n              <DisplayRounds rounds={rounds}></DisplayRounds>\n              <DisplayTime time={doConvert(seconds)}/>\n            </Panel>\n            <Panel>\n                {renderAction(pause,rest)}\n            </Panel>\n        </Panel>\n\n        <Button className={(pause)?'btn-start':'btn-pause'} text={(pause)?'Start':'Pause'} onClick={handlePauseToggle} disabled={(seconds === 0)? true:false}/>\n        <Button className='btn-end' text='End' onClick={handleEnd} disabled={(rounds === 0)||(rounds === initialRounds)? true:false}/> \n        <Button className='btn-reset' text='Reset' onClick={handleReset} />\n        </>        \n    );\n};\n\nexport default Tabata;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}