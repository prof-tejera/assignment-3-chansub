{"ast":null,"code":"var _jsxFileName = \"/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Countdown2.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\"; //I took some inspiration from https://stackoverflow.com/questions/61923862/how-to-pause-a-setinterval-countdown-timer-in-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown2 = () => {\n  _s();\n\n  const [secondsLeft, setSecondsLeft] = useState(60);\n  const [elapsed, setElapsed] = useState(60);\n  const [pause, setPause] = useState(true);\n\n  const timer = () => {\n    // setInterval for every second\n    countdown = setInterval(() => {\n      // if allowed time is used up, clear interval\n      if (secondsLeft < 0) {\n        clearInterval(countdown);\n        return;\n      } // if paused, record elapsed time and return\n\n\n      if (pause === true) {\n        elapsed = secondsLeft;\n        return;\n      } // decrement seconds left\n\n\n      secondsLeft--;\n      displayTimeLeft(secondsLeft);\n    }, 1000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      className: \"output\",\n      \"data-debug\": intervalRef.current,\n      children: [\"Seconds: \", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: pause ? 'btn-start' : 'btn-pause',\n      text: pause ? 'Start' : 'Pause',\n      onClick: handlePauseToggle,\n      disabled: seconds === 0 ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-end\",\n      text: \"End\",\n      onClick: handleEnd,\n      disabled: seconds === 0 ? true : false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-reset\",\n      text: \"Reset\",\n      onClick: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countdown2, \"gR1mCVgH8d64KBn6FrNtE6rq9L0=\");\n\n_c = Countdown2;\nexport default Countdown2;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown2\");","map":{"version":3,"names":["useEffect","useState","useRef","Panel","Button","Countdown2","secondsLeft","setSecondsLeft","elapsed","setElapsed","pause","setPause","timer","countdown","setInterval","clearInterval","displayTimeLeft","intervalRef","current","seconds","handlePauseToggle","handleEnd","handleReset"],"sources":["/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Countdown2.js"],"sourcesContent":["import { useEffect, useState, useRef} from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\";\n\n//I took some inspiration from https://stackoverflow.com/questions/61923862/how-to-pause-a-setinterval-countdown-timer-in-react\n\nconst Countdown2 = () => {\n\n    const [secondsLeft, setSecondsLeft] = useState(60);\n    const [elapsed, setElapsed] = useState(60);\n    const [pause, setPause] = useState(true);\n\n    const timer = () => {\n        // setInterval for every second\n        countdown = setInterval(() => {\n          // if allowed time is used up, clear interval\n          if (secondsLeft < 0) {\n            clearInterval(countdown)\n            return;\n          }\n          // if paused, record elapsed time and return\n          if (pause === true) {\n            elapsed = secondsLeft;\n            return;\n          }\n          // decrement seconds left\n          secondsLeft--;\n          displayTimeLeft(secondsLeft)\n        }, 1000)\n      }\n    \n\n\n\n    return (\n        <>\n        <Panel className={\"output\"} data-debug={intervalRef.current}>Seconds: {seconds}</Panel>\n        <Button className={(pause)?'btn-start':'btn-pause'} text={(pause)?'Start':'Pause'} onClick={handlePauseToggle} disabled={(seconds === 0)? true:false}/>\n        <Button className='btn-end' text='End' onClick={handleEnd} disabled={(seconds === 0)? true:false}/> \n        <Button className='btn-reset' text='Reset' onClick={handleReset} />\n        </>        \n    );\n};\n\nexport default Countdown2;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EAErB,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,IAAD,CAAlC;;EAEA,MAAMW,KAAK,GAAG,MAAM;IAChB;IACAC,SAAS,GAAGC,WAAW,CAAC,MAAM;MAC5B;MACA,IAAIR,WAAW,GAAG,CAAlB,EAAqB;QACnBS,aAAa,CAACF,SAAD,CAAb;QACA;MACD,CAL2B,CAM5B;;;MACA,IAAIH,KAAK,KAAK,IAAd,EAAoB;QAClBF,OAAO,GAAGF,WAAV;QACA;MACD,CAV2B,CAW5B;;;MACAA,WAAW;MACXU,eAAe,CAACV,WAAD,CAAf;IACD,CAdsB,EAcpB,IAdoB,CAAvB;EAeD,CAjBH;;EAsBA,oBACI;IAAA,wBACA,QAAC,KAAD;MAAO,SAAS,EAAE,QAAlB;MAA4B,cAAYW,WAAW,CAACC,OAApD;MAAA,wBAAuEC,OAAvE;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,MAAD;MAAQ,SAAS,EAAGT,KAAD,GAAQ,WAAR,GAAoB,WAAvC;MAAoD,IAAI,EAAGA,KAAD,GAAQ,OAAR,GAAgB,OAA1E;MAAmF,OAAO,EAAEU,iBAA5F;MAA+G,QAAQ,EAAGD,OAAO,KAAK,CAAb,GAAiB,IAAjB,GAAsB;IAA/I;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA,QAAC,MAAD;MAAQ,SAAS,EAAC,SAAlB;MAA4B,IAAI,EAAC,KAAjC;MAAuC,OAAO,EAAEE,SAAhD;MAA2D,QAAQ,EAAGF,OAAO,KAAK,CAAb,GAAiB,IAAjB,GAAsB;IAA3F;MAAA;MAAA;MAAA;IAAA,QAHA,eAIA,QAAC,MAAD;MAAQ,SAAS,EAAC,WAAlB;MAA8B,IAAI,EAAC,OAAnC;MAA2C,OAAO,EAAEG;IAApD;MAAA;MAAA;MAAA;IAAA,QAJA;EAAA,gBADJ;AAQH,CApCD;;GAAMjB,U;;KAAAA,U;AAsCN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}