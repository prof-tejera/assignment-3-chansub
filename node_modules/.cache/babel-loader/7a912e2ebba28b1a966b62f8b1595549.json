{"ast":null,"code":"var _jsxFileName = \"/Users/steymourian/Documents/GitHub/personal/assignment-2-chansub/src/components/generic/Button.js\";\nimport \"./Button.css\";\nimport playIcon from '../../images/icons8-play-96.png';\nimport pauseIcon from '../../images/icons8-pause-96.png';\nimport resetIcon from '../../images/icons8-replay-96.png';\nimport stopIcon from '../../images/icons8-stop-96.png';\nimport removeIcon from '../../images/icons8-remove-96.png'; //Note: icons downloaded from https://icons8.com\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst imgSources = [{\n  type: 'play',\n  src: playIcon\n}, {\n  type: 'pause',\n  src: pauseIcon\n}, {\n  type: 'reset',\n  src: resetIcon\n}, {\n  type: 'stop',\n  src: stopIcon\n}, {\n  type: 'remove',\n  src: removeIcon\n}];\n\nconst Button = _ref => {\n  let {\n    type,\n    text,\n    ...btnProps\n  } = _ref;\n\n  function renderButton(buttonType, buttonText) {\n    let item = imgSources.find(item => item.type === buttonType);\n\n    if (item) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        src: item.src,\n        width: \"30\",\n        alt: \"{buttonText}\",\n        title: \"{buttonText}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this);\n    } else {\n      return buttonText;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", { ...btnProps,\n    children: renderButton(type, text)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"names":["playIcon","pauseIcon","resetIcon","stopIcon","removeIcon","imgSources","type","src","Button","text","btnProps","renderButton","buttonType","buttonText","item","find"],"sources":["/Users/steymourian/Documents/GitHub/personal/assignment-2-chansub/src/components/generic/Button.js"],"sourcesContent":["import \"./Button.css\";\nimport playIcon from '../../images/icons8-play-96.png';\nimport pauseIcon from '../../images/icons8-pause-96.png';\nimport resetIcon from '../../images/icons8-replay-96.png';\nimport stopIcon from '../../images/icons8-stop-96.png';\nimport removeIcon from '../../images/icons8-remove-96.png';\n\n//Note: icons downloaded from https://icons8.com\nconst imgSources = [  \n  {type: 'play', src: playIcon},\n  {type: 'pause', src: pauseIcon},\n  {type: 'reset', src: resetIcon},\n  {type: 'stop', src: stopIcon},\n  {type: 'remove', src: removeIcon}\n]\n\nconst Button = ({ type, text, ...btnProps }) => {\n\n  function renderButton(buttonType,buttonText){\n    let item = imgSources.find(item => item.type === buttonType);\n    if(item){\n      return <img src={item.src} width=\"30\" alt=\"{buttonText}\" title=\"{buttonText}\"/>\n    }\n    else{\n      return buttonText;\n    }\n  }\n\n  return (\n    <button\n      {...btnProps}\n    >\n      {renderButton(type,text)}\n    </button>\n  );\n};\n\n\nexport default Button;\n"],"mappings":";AAAA,OAAO,cAAP;AACA,OAAOA,QAAP,MAAqB,iCAArB;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,UAAP,MAAuB,mCAAvB,C,CAEA;;;AACA,MAAMC,UAAU,GAAG,CACjB;EAACC,IAAI,EAAE,MAAP;EAAeC,GAAG,EAAEP;AAApB,CADiB,EAEjB;EAACM,IAAI,EAAE,OAAP;EAAgBC,GAAG,EAAEN;AAArB,CAFiB,EAGjB;EAACK,IAAI,EAAE,OAAP;EAAgBC,GAAG,EAAEL;AAArB,CAHiB,EAIjB;EAACI,IAAI,EAAE,MAAP;EAAeC,GAAG,EAAEJ;AAApB,CAJiB,EAKjB;EAACG,IAAI,EAAE,QAAP;EAAiBC,GAAG,EAAEH;AAAtB,CALiB,CAAnB;;AAQA,MAAMI,MAAM,GAAG,QAAiC;EAAA,IAAhC;IAAEF,IAAF;IAAQG,IAAR;IAAc,GAAGC;EAAjB,CAAgC;;EAE9C,SAASC,YAAT,CAAsBC,UAAtB,EAAiCC,UAAjC,EAA4C;IAC1C,IAAIC,IAAI,GAAGT,UAAU,CAACU,IAAX,CAAgBD,IAAI,IAAIA,IAAI,CAACR,IAAL,KAAcM,UAAtC,CAAX;;IACA,IAAGE,IAAH,EAAQ;MACN,oBAAO;QAAK,GAAG,EAAEA,IAAI,CAACP,GAAf;QAAoB,KAAK,EAAC,IAA1B;QAA+B,GAAG,EAAC,cAAnC;QAAkD,KAAK,EAAC;MAAxD;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAGI;MACF,OAAOM,UAAP;IACD;EACF;;EAED,oBACE,uBACMH,QADN;IAAA,UAGGC,YAAY,CAACL,IAAD,EAAMG,IAAN;EAHf;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAnBD;;KAAMD,M;AAsBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}