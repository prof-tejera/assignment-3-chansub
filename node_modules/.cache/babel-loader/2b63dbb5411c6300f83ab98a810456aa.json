{"ast":null,"code":"var _jsxFileName = \"/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = () => {\n  _s();\n\n  const [startTime, setStartTime] = useState(0);\n  const [endTime, setEndTime] = useState(180);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [state, setState] = useState({\n    intervalID: 0,\n    status: 'idle'\n  });\n  let second = 0;\n\n  const handleStart = () => {\n    start();\n    console.log('Start button hit!');\n  };\n\n  const handleEnd = () => {\n    end();\n    console.log('End button hit.');\n  };\n\n  const sayHi = () => {\n    //const date = new Date();\n    //let curr = date.toLocaleTimeString();\n    count += 1;\n    console.log('current second', count);\n    setCurrentTime(count);\n  };\n\n  const start = function () {\n    const id = setInterval(sayHi, 1000); //1000 millisecond = 1 second\n\n    setState(ev => ({ ...ev,\n      intervalID: id\n    }));\n    return id;\n  };\n\n  const end = () => {\n    clearInterval(state.intervalID);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      className: \"output\",\n      children: [\"ID: \", state.intervalID, \" Current Time: \", currentTime]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-start\",\n      text: \"Start\",\n      onClick: handleStart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-end\",\n      text: \"End\",\n      onClick: handleEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countdown, \"QQvC9nfg0rilXHIhv4t4AUKo49o=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","Panel","Button","Countdown","startTime","setStartTime","endTime","setEndTime","currentTime","setCurrentTime","state","setState","intervalID","status","second","handleStart","start","console","log","handleEnd","end","sayHi","count","id","setInterval","ev","clearInterval"],"sources":["/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\";\n\nconst Countdown = () => {\n\n\n    const [startTime, setStartTime] = useState(0);\n    const [endTime, setEndTime] = useState(180);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [state, setState] = useState({intervalID:0, status:'idle'});\n    let second = 0;\n\n    const handleStart = () => {\n        start();\n        console.log('Start button hit!');\n    }\n\n    const handleEnd = () => {\n        end();\n        console.log('End button hit.');\n    }\n\n    const sayHi = () => {\n        //const date = new Date();\n        //let curr = date.toLocaleTimeString();\n        count += 1;\n        console.log('current second', count);\n        setCurrentTime(count);\n    }\n\n    const start = function () {\n        const id = setInterval(sayHi, 1000); //1000 millisecond = 1 second\n        setState(ev => ({\n            ...ev,\n            intervalID: id,\n        }));\n        return id;\n    }\n    const end = () => {\n        clearInterval(state.intervalID);   \n    }\n\n\n    return (\n        <>\n        <Panel className=\"output\">ID: {state.intervalID} Current Time: {currentTime}</Panel>\n        <Button className='btn-start' text='Start' onClick={handleStart} />\n        <Button className='btn-end' text='End' onClick={handleEnd}/></>\n    );\n};\n\nexport default Countdown;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAGpB,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,CAAD,CAA1C;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,GAAD,CAAtC;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC;IAACY,UAAU,EAAC,CAAZ;IAAeC,MAAM,EAAC;EAAtB,CAAD,CAAlC;EACA,IAAIC,MAAM,GAAG,CAAb;;EAEA,MAAMC,WAAW,GAAG,MAAM;IACtBC,KAAK;IACLC,OAAO,CAACC,GAAR,CAAY,mBAAZ;EACH,CAHD;;EAKA,MAAMC,SAAS,GAAG,MAAM;IACpBC,GAAG;IACHH,OAAO,CAACC,GAAR,CAAY,iBAAZ;EACH,CAHD;;EAKA,MAAMG,KAAK,GAAG,MAAM;IAChB;IACA;IACAC,KAAK,IAAI,CAAT;IACAL,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,KAA9B;IACAb,cAAc,CAACa,KAAD,CAAd;EACH,CAND;;EAQA,MAAMN,KAAK,GAAG,YAAY;IACtB,MAAMO,EAAE,GAAGC,WAAW,CAACH,KAAD,EAAQ,IAAR,CAAtB,CADsB,CACe;;IACrCV,QAAQ,CAACc,EAAE,KAAK,EACZ,GAAGA,EADS;MAEZb,UAAU,EAAEW;IAFA,CAAL,CAAH,CAAR;IAIA,OAAOA,EAAP;EACH,CAPD;;EAQA,MAAMH,GAAG,GAAG,MAAM;IACdM,aAAa,CAAChB,KAAK,CAACE,UAAP,CAAb;EACH,CAFD;;EAKA,oBACI;IAAA,wBACA,QAAC,KAAD;MAAO,SAAS,EAAC,QAAjB;MAAA,mBAA+BF,KAAK,CAACE,UAArC,qBAAgEJ,WAAhE;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,MAAD;MAAQ,SAAS,EAAC,WAAlB;MAA8B,IAAI,EAAC,OAAnC;MAA2C,OAAO,EAAEO;IAApD;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA,QAAC,MAAD;MAAQ,SAAS,EAAC,SAAlB;MAA4B,IAAI,EAAC,KAAjC;MAAuC,OAAO,EAAEI;IAAhD;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADJ;AAMH,CA9CD;;GAAMhB,S;;KAAAA,S;AAgDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}