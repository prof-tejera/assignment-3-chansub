{"ast":null,"code":"var _jsxFileName = \"/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Countdown.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\"; //Some inspiration from https://stackoverflow.com/questions/61923862/how-to-pause-a-setinterval-countdown-timer-in-react\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Countdown = () => {\n  _s();\n\n  const [seconds, setSeconds] = useState(180);\n  const [pause, setPause] = useState(true);\n  useEffect(() => {\n    const interval = setInterval(sayHi, 1000); //1000 millisecond = 1 second\n    // const interval = setInterval(() => {\n    //     if(!pause) { \n    //         if (seconds > 0) {\n    //             setSeconds(seconds - 1);\n    //         }\n    //     }\n    // }, 1000);\n\n    return () => clearInterval(interval);\n  });\n\n  const sayHi = () => {\n    if (!pause) {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n        console.log('running now...', seconds);\n      }\n    }\n  };\n\n  const handlePauseToggle = () => {\n    setPause(!pause);\n    console.log('Is paused?', pause);\n  };\n\n  const handleEnd = () => {\n    setPause(false);\n    setSeconds(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Panel, {\n      className: \"output\",\n      children: [\"Second(s): \", seconds]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: pause ? 'btn-start' : 'btn-pause',\n      text: pause ? 'Start' : 'Pause',\n      onClick: handlePauseToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-end\",\n      text: \"End\",\n      onClick: handleEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Countdown, \"RY4UYvh8E2mAq1WDs0mvEhI/GGw=\");\n\n_c = Countdown;\nexport default Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"names":["useEffect","useState","Panel","Button","Countdown","seconds","setSeconds","pause","setPause","interval","setInterval","sayHi","clearInterval","console","log","handlePauseToggle","handleEnd"],"sources":["/Users/steymourian/Documents/GitHub/personal/assignment-1-chansub/src/components/timers/Countdown.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport Panel from \"../generic/Panel.js\";\nimport Button from \"../generic/Button.js\";\n\n//Some inspiration from https://stackoverflow.com/questions/61923862/how-to-pause-a-setinterval-countdown-timer-in-react\n\nconst Countdown = () => {\n\n    const [seconds, setSeconds] = useState(180);\n    const [pause, setPause] = useState(true);\n\n    useEffect(() => {\n        \n        const interval = setInterval(sayHi, 1000); //1000 millisecond = 1 second\n        // const interval = setInterval(() => {\n        //     if(!pause) { \n        //         if (seconds > 0) {\n        //             setSeconds(seconds - 1);\n        //         }\n        //     }\n        // }, 1000);\n    return () => clearInterval(interval);\n    });\n\n    const sayHi = () => {\n        if(!pause){\n            if(seconds > 0){\n                setSeconds(seconds - 1);\n                console.log('running now...', seconds);\n            }\n        }\n    }\n\n    const handlePauseToggle = () => {\n        setPause(!pause);\n        console.log('Is paused?',pause);\n    }\n    const handleEnd = () => {\n        setPause(false);\n        setSeconds(0);\n    }\n\n    return (\n        <>\n        <Panel className={\"output\"}>Second(s): {seconds}</Panel>\n        <Button className={(pause)?'btn-start':'btn-pause'} text={(pause)?'Start':'Pause'} onClick={handlePauseToggle} />\n        <Button className='btn-end' text='End' onClick={handleEnd} />\n        </>        \n    );\n};\n\nexport default Countdown;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EAAA;;EAEpB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,GAAD,CAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IAEZ,MAAMS,QAAQ,GAAGC,WAAW,CAACC,KAAD,EAAQ,IAAR,CAA5B,CAFY,CAE+B;IAC3C;IACA;IACA;IACA;IACA;IACA;IACA;;IACJ,OAAO,MAAMC,aAAa,CAACH,QAAD,CAA1B;EACC,CAXQ,CAAT;;EAaA,MAAME,KAAK,GAAG,MAAM;IAChB,IAAG,CAACJ,KAAJ,EAAU;MACN,IAAGF,OAAO,GAAG,CAAb,EAAe;QACXC,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;QACAQ,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BT,OAA9B;MACH;IACJ;EACJ,CAPD;;EASA,MAAMU,iBAAiB,GAAG,MAAM;IAC5BP,QAAQ,CAAC,CAACD,KAAF,CAAR;IACAM,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBP,KAAzB;EACH,CAHD;;EAIA,MAAMS,SAAS,GAAG,MAAM;IACpBR,QAAQ,CAAC,KAAD,CAAR;IACAF,UAAU,CAAC,CAAD,CAAV;EACH,CAHD;;EAKA,oBACI;IAAA,wBACA,QAAC,KAAD;MAAO,SAAS,EAAE,QAAlB;MAAA,0BAAwCD,OAAxC;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA,QAAC,MAAD;MAAQ,SAAS,EAAGE,KAAD,GAAQ,WAAR,GAAoB,WAAvC;MAAoD,IAAI,EAAGA,KAAD,GAAQ,OAAR,GAAgB,OAA1E;MAAmF,OAAO,EAAEQ;IAA5F;MAAA;MAAA;MAAA;IAAA,QAFA,eAGA,QAAC,MAAD;MAAQ,SAAS,EAAC,SAAlB;MAA4B,IAAI,EAAC,KAAjC;MAAuC,OAAO,EAAEC;IAAhD;MAAA;MAAA;MAAA;IAAA,QAHA;EAAA,gBADJ;AAOH,CA3CD;;GAAMZ,S;;KAAAA,S;AA6CN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}